In test5.svg we see PartA and PartD emitting on pins 3 and 4, resp., to a single port of partB into pin 8.

And, we see PartA using fanout to send events from pin 3 to partC (pin 9) and partB (pin 8).

This is done by adding two passes to the parser pass: markIndexedPorts and coincidentPorts.

Convention #1: at this time, we assume that all ports are indexed.  Some ports may also have names, but, the current convention is that *every* port has an index.  Later, when we consider naming ports, we will relax this convention, or create indices.

Convention #2: Fb-to-prolog (lisp) unconditionally creates a port at each end of a wire.  Fan-out ports are drawn in Draw.IO as wires that "overlap" each other at the beginning of the lines.  During the early passes of the parser, only one of these lines has a port that connects to the output port of the associated Part.  All other "coincident" wires have ports that are not connected to the output port of the Part.  Likewise, only one fan-in wire is associated with the input port of a Part.  This is "fixed" in the new later passes of the parser.  We, later, detect which ports overlap and mark them as coincident.

MarkIndexedPorts is very simple.  It finds every port that has an index and marks is as indexedSink or indexedSource as appropriate.


CoincidentPorts.pl finds all ports that have the same geometrical centers, or have centers that are up to 20 pixels from each other.

Because of convention #2, only one port in a group of coincident ports will have an actual index (the port number of the corresponding Part).  That index is memoized and all other non-indexed ports in that group, will be given the memoized index. 
