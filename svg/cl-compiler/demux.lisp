(in-package :arrowgrams/compiler/demux)


(defmethod first-time ((self e/part:part))
  (cl-event-passing-user::@set-instance-var self :counter 0)
  (cl-event-passing-user::@set-instance-var self :state :idle)
  )

(defmethod react ((self e/part:part) e)
  (let ((pin (e/event::sym e))
        (data (e/event:data e)))
    (ecase (cl-event-passing-user::@get-instance-var self :state)
      (:idle
       (if  (eq pin :go)
           (progn
	     (let ((counter (cl-event-passing-user::@get-instance-var self :counter)))
               (incf counter)
	       (cl-event-passing-user::@set-instance-var self :counter counter)
             (ecase counter
               (1 (cl-event-passing-user::@send self (e/part::get-output-pin self :o1) T))
               (2 (cl-event-passing-user::@send self (e/part::get-output-pin self :o2) T))
               (3 (cl-event-passing-user::@send self (e/part::get-output-pin self :o3) T))
               (4 (cl-event-passing-user::@send self (e/part::get-output-pin self :o4) T))
               (5 (cl-event-passing-user::@send self (e/part::get-output-pin self :o5) T))
               (6 (cl-event-passing-user::@send self (e/part::get-output-pin self :o6) T))
               (7 (cl-event-passing-user::@send self (e/part::get-output-pin self :o7) T))
               (8 (cl-event-passing-user::@send self (e/part::get-output-pin self :o8) T))
               (9 (cl-event-passing-user::@send self (e/part::get-output-pin self :o9) T))
               (10 (cl-event-passing-user::@send self (e/part::get-output-pin self :o10) T))
               (11 (cl-event-passing-user::@send self (e/part::get-output-pin self :o11) T))
               (12 (cl-event-passing-user::@send self (e/part::get-output-pin self :o12) T))
               (13 (cl-event-passing-user::@send self (e/part::get-output-pin self :o13) T))
               (14 (cl-event-passing-user::@send self (e/part::get-output-pin self :o14) T))
               (15 (cl-event-passing-user::@send self (e/part::get-output-pin self :o15) T))
               (16 (cl-event-passing-user::@send self (e/part::get-output-pin self :o16) T))
               (17 (cl-event-passing-user::@send self (e/part::get-output-pin self :o17) T))
               (18 (cl-event-passing-user::@send self (e/part::get-output-pin self :o18) T))
               (19 (cl-event-passing-user::@send self (e/part::get-output-pin self :o19) T))
               (20 (cl-event-passing-user::@send self (e/part::get-output-pin self :o20) T))
               (21 (cl-event-passing-user::@send self (e/part::get-output-pin self :o21) T))
               (22 (cl-event-passing-user::@send self (e/part::get-output-pin self :o22) T))
               (23 (cl-event-passing-user::@send self (e/part::get-output-pin self :o23) T))
               (24 (cl-event-passing-user::@send self (e/part::get-output-pin self :o24) T))
               (25 (cl-event-passing-user::@send self (e/part::get-output-pin self :o25) T))
               (26 (cl-event-passing-user::@send self (e/part::get-output-pin self :o26) T))
               (27 (cl-event-passing-user::@send self (e/part::get-output-pin self :o27) T))
               (28 (cl-event-passing-user::@send self (e/part::get-output-pin self :o28) T))
               (29 (cl-event-passing-user::@send self (e/part::get-output-pin self :o29) T))
               (30 (format *standard-output* "~&demux done~%")))))
         (cl-event-passing-user::@send
            self
            :error
            (format nil "DEMUX in state :idle expected :fb or :go, but got action ~S data ~S" pin (e/event:data e))))))))
