(in-package :arrowgrams/compiler/ellipse-bounding-boxes)

; (:code ellipse-bounding-boxes (:fb :go) (:add-fact :done :request-fb :error) #'arrowgrams/compiler/ellipse-bounding-boxes::react #'arrowgrams/compiler/ellipse-bounding-boxes::first-time)

(defmethod first-time ((self e/part:part))
  (cl-event-passing-user::@set-instance-var self :state :idle)
  )

(defmethod react ((self e/part:part) e)
  (let ((pin (e/event::sym e))
        (data (e/event:data e)))
    (ecase (cl-event-passing-user::@get-instance-var self :state)
      (:idle
       (if (eq pin :fb)
           (cl-event-passing-user::@set-instance-var self :fb data)
         (if (eq pin :go)
             (progn
               (send-rules self)
               (cl-event-passing-user::@send self :request-fb t)
               (cl-event-passing-user::@set-instance-var self :state :waiting-for-new-fb))
           (cl-event-passing-user::@send
            self
            :error
            (format nil "BOUNDING-BOXES in state :idle expected :fb or :go, but got action ~S data ~S" pin (e/event:data e))))))

      (:waiting-for-new-fb
       (if (eq pin :fb)
           (progn
             (cl-event-passing-user::@set-instance-var self :fb data)
             (make-bounding-boxes self)
             (cl-event-passing-user::@send self :done t)
             (cl-event-passing-user::@set-instance-var self :state :idle))
         (cl-event-passing-user::@send
          self
          :error
          (format nil "BOUNDING-BOXES in state :waiting-for-new-fb expected :fb, but got action ~S data ~S" pin (e/event:data e))))))))
             
         
#+nil(defparameter *test-fb*
  '(
    ((:ellipse :id575))
    ((:ellipse :id498))
    ((:ellipse :id483))
    ((:geometry_h :id596 12))
    ((:geometry_h :id594 12))
    ((:geometry_h :id592 12))
    ((:geometry_h :id590 12))
    ((:geometry_h :id588 12))
    ((:geometry_h :id586 12))
    ((:geometry_h :id584 12))
    ((:geometry_h :id582 12))
    ((:geometry_h :id580 12))
    ((:geometry_h :id578 12))
    ((:geometry_h :id576 12))
    ((:geometry_h :id575 40.0))
    ((:geometry_h :id568 12))
    ((:geometry_h :id566 12))
    ((:geometry_h :id564 12))
    ((:geometry_h :id562 12))
    ((:geometry_h :id560 12))
    ((:geometry_h :id559 80.0))
    ((:geometry_h :id547 12))
    ((:geometry_h :id545 12))
    ((:geometry_h :id543 12))
    ((:geometry_h :id541 12))
    ((:geometry_h :id539 12))
    ((:geometry_h :id538 80.0))
    ((:geometry_h :id516 12))
    ((:geometry_h :id514 12))
    ((:geometry_h :id512 12))
    ((:geometry_h :id511 80.0))
    ((:geometry_h :id505 12))
    ((:geometry_h :id504 22))
    ((:geometry_h :id501 270.0))
    ((:geometry_h :id499 12))
    ((:geometry_h :id498 40.0))
    ((:geometry_h :id496 12))
    ((:geometry_h :id495 80.0))
    ((:geometry_h :id488 12))
    ((:geometry_h :id486 12))
    ((:geometry_h :id484 12))
    ((:geometry_h :id483 40.0))
    ((:geometry_h :id471 12))
    ((:geometry_h :id469 12))
    ((:geometry_h :id467 12))
    ((:geometry_h :id466 80.0))
    ((:geometry_h :id459 12))
    ((:geometry_h :id457 12))
    ((:geometry_h :id456 80.0))
    ((:geometry_h :id444 12))
    ((:geometry_h :id442 12))
    ((:geometry_h :id440 12))
    ((:geometry_h :id438 12))
    ((:geometry_h :id431 12))
    ((:geometry_h :id430 80.0))
    ((:geometry_h :id423 12))
    ((:geometry_h :id422 80.0))
    ((:geometry_h :id415 12))
    ((:geometry_h :id413 12))
    ((:geometry_h :id412 80.0))
    ((:geometry_h :id400 12))
    ((:geometry_h :id398 12))
    ((:geometry_h :id396 12))
    ((:geometry_h :id394 12))
    ((:geometry_h :id392 12))
    ((:geometry_h :id391 80.0))
    ((:geometry_w :id596 13))
    ((:geometry_w :id594 14))
    ((:geometry_w :id592 5))
    ((:geometry_w :id590 21))
    ((:geometry_w :id588 14))
    ((:geometry_w :id586 22))
    ((:geometry_w :id584 17))
    ((:geometry_w :id582 17))
    ((:geometry_w :id580 4))
    ((:geometry_w :id578 9))
    ((:geometry_w :id576 14))
    ((:geometry_w :id575 40.0))
    ((:geometry_w :id568 12))
    ((:geometry_w :id566 8))
    ((:geometry_w :id564 12))
    ((:geometry_w :id562 17))
    ((:geometry_w :id560 24))
    ((:geometry_w :id559 80.0))
    ((:geometry_w :id547 9))
    ((:geometry_w :id545 14))
    ((:geometry_w :id543 14))
    ((:geometry_w :id541 14))
    ((:geometry_w :id539 22))
    ((:geometry_w :id538 80.0))
    ((:geometry_w :id516 8))
    ((:geometry_w :id514 17))
    ((:geometry_w :id512 14))
    ((:geometry_w :id511 80.0))
    ((:geometry_w :id505 10))
    ((:geometry_w :id504 20))
    ((:geometry_w :id501 960.0))
    ((:geometry_w :id499 22))
    ((:geometry_w :id498 40.0))
    ((:geometry_w :id496 18))
    ((:geometry_w :id495 80.0))
    ((:geometry_w :id488 13))
    ((:geometry_w :id486 12))
    ((:geometry_w :id484 13))
    ((:geometry_w :id483 40.0))
    ((:geometry_w :id471 17))
    ((:geometry_w :id469 18))
    ((:geometry_w :id467 24))
    ((:geometry_w :id466 80.0))
    ((:geometry_w :id459 13))
    ((:geometry_w :id457 18))
    ((:geometry_w :id456 80.0))
    ((:geometry_w :id444 8))
    ((:geometry_w :id442 10))
    ((:geometry_w :id440 4))
    ((:geometry_w :id438 4))
    ((:geometry_w :id431 8))
    ((:geometry_w :id430 80.0))
    ((:geometry_w :id423 9))
    ((:geometry_w :id422 80.0))
    ((:geometry_w :id415 3))
    ((:geometry_w :id413 17))
    ((:geometry_w :id412 80.0))
    ((:geometry_w :id400 7))
    ((:geometry_w :id398 13))
    ((:geometry_w :id396 10))
    ((:geometry_w :id394 11))
    ((:geometry_w :id392 19))
    ((:geometry_w :id391 80.0))
    ((:geometry_left_x :id559 3585.0))
    ((:geometry_left_x :id538 4145.0))
    ((:geometry_left_x :id511 3585.0))
    ((:geometry_left_x :id504 3514.5))
    ((:geometry_left_x :id501 3045.0))
    ((:geometry_left_x :id495 4365.0))
    ((:geometry_left_x :id466 2930.0))
    ((:geometry_left_x :id456 3585.0))
    ((:geometry_left_x :id430 3175.0))
    ((:geometry_left_x :id422 4055.0))
    ((:geometry_left_x :id412 3585.0))
    ((:geometry_left_x :id391 3585.0))
    ((:geometry_top_y :id596 163.5))
    ((:geometry_top_y :id594 853.5))
    ((:geometry_top_y :id592 253.5))
    ((:geometry_top_y :id590 223.5))
    ((:geometry_top_y :id588 248.5))
    ((:geometry_top_y :id586 298.5))
    ((:geometry_top_y :id584 318.5))
    ((:geometry_top_y :id582 293.5))
    ((:geometry_top_y :id580 358.5))
    ((:geometry_top_y :id578 248.5))
    ((:geometry_top_y :id576 43.5))
    ((:geometry_top_y :id568 973.5))
    ((:geometry_top_y :id566 913.5))
    ((:geometry_top_y :id564 913.5))
    ((:geometry_top_y :id562 813.5))
    ((:geometry_top_y :id560 863.5))
    ((:geometry_top_y :id559 820.0))
    ((:geometry_top_y :id547 963.5))
    ((:geometry_top_y :id545 358.5))
    ((:geometry_top_y :id543 338.5))
    ((:geometry_top_y :id541 683.5))
    ((:geometry_top_y :id539 1023.5))
    ((:geometry_top_y :id538 980.0))
    ((:geometry_top_y :id516 743.5))
    ((:geometry_top_y :id514 633.5))
    ((:geometry_top_y :id512 693.5))
    ((:geometry_top_y :id511 650.0))
    ((:geometry_top_y :id505 1408.5))
    ((:geometry_top_y :id504 1398.5))
    ((:geometry_top_y :id501 1270.0))
    ((:geometry_top_y :id499 303.5))
    ((:geometry_top_y :id496 303.5))
    ((:geometry_top_y :id495 260.0))
    ((:geometry_top_y :id488 1083.5))
    ((:geometry_top_y :id486 293.5))
    ((:geometry_top_y :id484 173.5))
    ((:geometry_top_y :id471 413.5))
    ((:geometry_top_y :id469 1033.5))
    ((:geometry_top_y :id467 353.5))
    ((:geometry_top_y :id466 310.0))
    ((:geometry_top_y :id459 973.5))
    ((:geometry_top_y :id457 1023.5))
    ((:geometry_top_y :id456 980.0))
    ((:geometry_top_y :id444 363.5))
    ((:geometry_top_y :id442 373.5))
    ((:geometry_top_y :id440 323.5))
    ((:geometry_top_y :id438 283.5))
    ((:geometry_top_y :id431 303.5))
    ((:geometry_top_y :id430 260.0))
    ((:geometry_top_y :id423 303.5))
    ((:geometry_top_y :id422 260.0))
    ((:geometry_top_y :id415 163.5))
    ((:geometry_top_y :id413 173.5))
    ((:geometry_top_y :id412 130.0))
    ((:geometry_top_y :id400 483.5))
    ((:geometry_top_y :id398 553.5))
    ((:geometry_top_y :id396 513.5))
    ((:geometry_top_y :id394 443.5))
    ((:geometry_top_y :id392 493.5))
    ((:geometry_top_y :id391 450.0))
    ((:geometry_center_x :id596 3704.5))
    ((:geometry_center_x :id594 3714.5))
    ((:geometry_center_x :id592 3234.5))
    ((:geometry_center_x :id590 3645.5))
    ((:geometry_center_x :id588 4414.5))
    ((:geometry_center_x :id586 4514.5))
    ((:geometry_center_x :id584 4314.5))
    ((:geometry_center_x :id582 4184.5))
    ((:geometry_center_x :id580 4099.5))
    ((:geometry_center_x :id578 4132.0))
    ((:geometry_center_x :id576 4404.5))
    ((:geometry_center_x :id575 4405.0))
    ((:geometry_center_x :id568 3680.5))
    ((:geometry_center_x :id566 3584.5))
    ((:geometry_center_x :id564 3654.5))
    ((:geometry_center_x :id562 3645.5))
    ((:geometry_center_x :id560 3624.5))
    ((:geometry_center_x :id547 4214.5))
    ((:geometry_center_x :id545 4454.5))
    ((:geometry_center_x :id543 3054.5))
    ((:geometry_center_x :id541 3714.5))
    ((:geometry_center_x :id539 4184.5))
    ((:geometry_center_x :id516 3664.5))
    ((:geometry_center_x :id514 3620.5))
    ((:geometry_center_x :id512 3624.5))
    ((:geometry_center_x :id505 3529.5))
    ((:geometry_center_x :id499 4664.5))
    ((:geometry_center_x :id498 4665.0))
    ((:geometry_center_x :id496 4404.5))
    ((:geometry_center_x :id488 3645.5))
    ((:geometry_center_x :id486 3002.0))
    ((:geometry_center_x :id484 3064.5))
    ((:geometry_center_x :id483 3065.0))
    ((:geometry_center_x :id471 2919.5))
    ((:geometry_center_x :id469 3529.5))
    ((:geometry_center_x :id467 2969.5))
    ((:geometry_center_x :id459 3594.5))
    ((:geometry_center_x :id457 3624.5))
    ((:geometry_center_x :id444 3159.5))
    ((:geometry_center_x :id442 3269.5))
    ((:geometry_center_x :id440 3284.5))
    ((:geometry_center_x :id438 4034.5))
    ((:geometry_center_x :id431 3214.5))
    ((:geometry_center_x :id423 4094.5))
    ((:geometry_center_x :id415 3554.5))
    ((:geometry_center_x :id413 3624.5))
    ((:geometry_center_x :id400 3704.5))
    ((:geometry_center_x :id398 3664.5))
    ((:geometry_center_x :id396 3554.5))
    ((:geometry_center_x :id394 3594.5))
    ((:geometry_center_x :id392 3624.5))
    ((:geometry_center_y :id575 40.0))
    ((:geometry_center_y :id498 300.0))
    ((:geometry_center_y :id483 170.0))
    ))

#+nil(defparameter *test-fb1*
  '(((:ellipse :id575))
    ((:geometry_h :id575 40.0))
    ((:geometry_w :id575 40.0))
    ((:geometry_center_x :id575 4405.0))
    ((:geometry_center_y :id575 40.0))))


(defmethod send-rules ((self e/part:part))
  ; nothing - deprecated
  )

(defmethod make-bounding-boxes ((self e/part:part))
  (let ((bounding-box-rules '((:ellipse-geometry (:? cl-holm-prolog::id) (:? cl-holm-prolog::cx) (:? cl-holm-prolog::cy) (:? cl-holm-prolog::hw) (:? cl-holm-prolog::hh))
                              (:ellipse (:? cl-holm-prolog::id))
                              (:geometry_center_x (:? cl-holm-prolog::id) (:? cl-holm-prolog::cx))
                              (:geometry_center_y (:? cl-holm-prolog::id) (:? cl-holm-prolog::cy))
                              (:geometry_w (:? cl-holm-prolog::id) (:? cl-holm-prolog::hw))
                              (:geometry_h (:? cl-holm-prolog::id) (:? cl-holm-prolog::hh)))))
    (let ((fb (cons bounding-box-rules (cl-event-passing-user::@get-instance-var self :fb))))
        (let ((r (hprolog:prove nil '((:ellipse-geometry (:? cl-holm-prolog::eid) (:? cl-holm-prolog::cx) (:? cl-holm-prolog::cy) (:? cl-holm-prolog::hw) (:? cl-holm-prolog::hh))) fb hprolog:*empty* 1 nil fb nil)))
          (mapcar #'(lambda (lis)
                      (assert (= 5 (length lis)))
                      (let ((id (cdr (first lis)))
                            (cx (cdr (second lis)))
                            (cy (cdr (third lis)))
                            (hw (cdr (fourth lis)))
                            (hh (cdr (fifth lis))))
                        (cl-event-passing-user::@send self :add-fact (list 'bounding_box_left id (- cx hw)))
                        (cl-event-passing-user::@send self :add-fact (list 'bounding_box_top id (- cy hh)))
                        (cl-event-passing-user::@send self :add-fact (list 'bounding_box_right id (+ cx hw)))
                        (cl-event-passing-user::@send self :add-fact (list 'bounding_box_bottom id (+ cy hh)))
                        (format *standard-output* "~&added bounding box for ellipse ~A ~A/~A/~A/~A~%"
                                id (- cx hw) (- cy hh) (+ cx hw) (+ cy hh))))
                  r)))))

