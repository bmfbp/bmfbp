* load Arrowgrams
#+name: runner
#+begin_src lisp :results output
  (progn
    (uiop:run-program "~/quicklisp/local-projects/rm.bash")
    (ql:quickload :arrowgrams/build)
    (ql:quickload :arrowgrams/runner))
#+end_src

* ahelloworld
build graph...
#+name: runner
#+begin_src lisp :results output
  (arrowgrams/build::arrowgrams-to-json "ahelloworld")
#+end_src

run graph...
#+name: runner
#+begin_src lisp :results output
  (let ((disp (arrowgrams/build::load-and-run-from-file  (arrowgrams/build::json-graph-path "ahelloworld"))))
    (format *standard-output* "~&first run:~%")
    (cl-user::dispatcher-inject disp "start" t)
    (format *standard-output* "~&second run:~%")
    (cl-user::dispatcher-inject disp "start" t)
    (format *standard-output* "~&third run:~%")
    (cl-user::dispatcher-inject disp "start" t))
#+end_src



* tokenizer test
#+name: runner
#+begin_src lisp :results output
  (arrowgrams/build::arrowgrams-to-json "tokenizer-tester")
#+end_src

#+name: runner
#+begin_src lisp :results output
  (arrowgrams/build::load-and-run-from-file  (arrowgrams/build::json-graph-path "tokenizer-tester"))
inject filename
inject request
#+end_src


#+RESULTS: runner
: "helloworld"
