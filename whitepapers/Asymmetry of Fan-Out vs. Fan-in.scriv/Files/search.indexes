<?xml version="1.0" encoding="UTF-8"?>
<SearchIndexes Version="1.0">
    <Documents>
        <Document ID="3E1EF3C4-BF75-4F57-8AE6-A59A17870FA5">
            <Text>Fan-out occurs when an output pin sends events to more than one receiver.

Fan-in occurs when multiple events arrive at a receiver from multiple pins.

See the “Guarantees” white paper.

When events are sent in a fan-out operation, the event send must be done atomically, i.e. all receivers must be locked, then the event copied to their input queues, then all receivers are unlocked.

Fan-in does not require this consideration.

This fan-out vs. Fan-in asymmetry is reflected in the wiring lists of Arrowgrams.  A wire must include all of the receivers for a given output pin.  

For example, consider Fig. &lt;$n:figure:Example1&gt;

#
Fig. &lt;$n:figure:Example1&gt; Example 1

The wiring list might be expressed as
A.u —&gt; [C.w, D.y]
B.v —&gt; [C.x, D.z]
E.q —&gt; G.s
F.r —&gt; G.s


</Text>
            <Comments>This applies to event-sending on bare metal and probably does not apply to Arrowgrams implemented on top of synchronous (call-return) languages and operating systems.  Dispatch based on call-return performs implicit locking and does not need to be performed explicitly.
Since every event is sent atomically, events coming in from different pins will always be dispatched at different times.</Comments>
        </Document>
    </Documents>
</SearchIndexes>