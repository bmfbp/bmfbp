<?xml version="1.0" encoding="UTF-8"?>
<SearchIndexes Version="1.0">
    <Documents>
        <Document ID="E4FC5A87-0DCA-4794-BD4A-FBD12C4F2070">
            <Title>Cloning</Title>
            <Text>Events are never cloned.

They are passed as references and are read-only by the receivers.

Receivers must copy events if they need to mutate them.

The Dispatcher performs a shallow copy of events when dealing with fan-out.  It clones the event cell, changes the output pin name to a local input pin of the receiver and places a reference to the data in the data field of the event.

An orthogonal aspect of cloning appears when we consider putting parts into a “binary” repository.  It must be possible to use the same component multiple times.  During the bootstrapping process, we clone parts using source inclusion.  Binary inclusion implies that we only know the external representation of a part.  The “binary” representation of a part must include enough information to instantiate the part uniquely many times.

This aspect requires further discussion.</Text>
            <Comments>a.k.a. clone
Delivering an event to multiple receivers.
i.e. without deep copying of the data.
i.e. to instantiate a part multiple times in the same schematic.
a.k.a. not knowing how the part is constructed.
See “Part Externals” whitepaper.</Comments>
        </Document>
    </Documents>
</SearchIndexes>