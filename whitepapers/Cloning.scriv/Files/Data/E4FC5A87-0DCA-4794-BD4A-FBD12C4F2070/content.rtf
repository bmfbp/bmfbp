{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Palatino-Roman;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Events are never cloned.\
\
They are passed as references and are read-only by the receivers.\
\
Receivers must {\field{\*\fldinst{HYPERLINK "scrivcmt://A74A2320-1222-4B48-99C8-AD0C25113ED0"}}{\fldrslt copy}} events if they need to mutate them.\
\
The Dispatcher performs a shallow copy of events when dealing with {\field{\*\fldinst{HYPERLINK "scrivcmt://D6A8420D-8E34-4DB5-87EA-CC1465A2D237"}}{\fldrslt fan-out}}.  It clones the event cell, changes the output pin name to a local input pin of the receiver and places a reference to the data in the data field of the {\field{\*\fldinst{HYPERLINK "scrivcmt://92F03BD2-63A8-4ED5-BC39-4CE9743B7B91"}}{\fldrslt event}}.\
\
An orthogonal aspect of cloning appears when we consider putting parts into a \'93binary\'94 repository.  It must be possible to use the same component multiple {\field{\*\fldinst{HYPERLINK "scrivcmt://4EBFFBA5-9ACF-4183-9AF8-FC78793D295C"}}{\fldrslt times}}.  During the bootstrapping process, we clone parts using source inclusion.  Binary {\field{\*\fldinst{HYPERLINK "scrivcmt://EE9B4D4B-84CA-4105-8284-A87D0BE65A93"}}{\fldrslt inclusion}} implies that we only know the external representation of a {\field{\*\fldinst{HYPERLINK "scrivcmt://E408FFBC-15C0-4C85-A783-70B9F61E9D85"}}{\fldrslt part}}.  The \'93binary\'94 representation of a part must include enough information to instantiate the part uniquely many times.\
\
This aspect requires further discussion.}