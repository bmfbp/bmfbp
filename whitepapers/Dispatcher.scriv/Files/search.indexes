<?xml version="1.0" encoding="UTF-8"?>
<SearchIndexes Version="1.0">
    <Documents>
        <Document ID="A19A2F3E-4A34-4531-AE41-51A739295FD7">
            <Title>Dispatcher</Title>
            <Text>Dispatcher {
  run all first-time functions.
  dispatch output queues, if any.
  loop 
    exit when all parts have empty input queues
    for some part, p, that is ready
       e &lt;- dequeue event from p’s input queue
       call react(p,e)
       dispatch output queues
    end for 
  end loop
}

Dispatch output queues {
  loop
    exit when all parts have empty output queues
    p &lt;- any part with non-empty output queue
    loop
      exit when p has empty output queue
      schem &lt;- p’s parent
      e &lt;- dequeue p’s output queue
      source &lt;- {p,e.pin}
      receivers &lt;- lookup source in schem’s receiver bag
      (receivers is used 3 times)
      lock input queues of all receivers
      loop
        exit when receivers is empty
        receiver {part,inpuPin} &lt;- pop from receivers
        newEvent &lt;- map e.outputPin to inputPin
        push newEvent onto receiver’s input queue
      end loop
      unlock input queues of all receivers
    end loop
}
N.B. lock/unlock needed only in bare metal and multi-thread versions.

Send(self : part, e : Event) {
  push e onto output queue of part
}</Text>
        </Document>
    </Documents>
</SearchIndexes>