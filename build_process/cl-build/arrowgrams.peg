ag-diagram <- top-level-description part-declarations internal-parts wiring

top-level-description <- 'schematic' input-pins COMMA output-pins
input-pins <- 'input' ws* 'pins' ws* LBRACE id-list RBRACE
output-pins <- 'output' ws* 'pins' ws* LBRACE id-list RBRACE
id-list <- (pin-id COMMA)* pin-id

part-declarations <- 'part' ws* 'declarations' ws* LBRACE part-decls RBRACE
part-decls <- (part-decl COMMA)* part-decl
part-decl <- part-id ws* COLON finality COMMA pin-decl

finality <- 'schematic' / 'code' / 'part'

pin-decl <- input-pin-decl* COMMA output-pin-decl*

input-pin-decl <- 'input' ws* 'pins' ws* LBRACE id-list RBRACE
output-pin-decl <- 'output' ws* 'pins' ws* LBRACE id-list RBRACE

internal-parts <- 'internal' ws* 'parts' ws* LBRACE instance-decls RBRACE

instance-decls <- (instance-decl COMMA)* instance-decl
instance-decl <- instance-id ws* COLON kind-id

wiring <- LBRACE wires RBRACE

wires <- (wire COMMA)* wire
wire <- sources ws* COLON receivers

sources <- (source COMMA)* source
source <- instance-id-pair

receivers <- (receiver COMMA)* receiver
receiver <- instance-id-pair

instance-id-pair <- id-with-slash
instance-id <- id-no-slash
kind-id <- id-no-slash

pin-id <- id-no-slash 

id-no-slash <- LBRACKET notSlash* RBRACKET
id-with-slash <- LBRACKET notSlash* '/' notSlash* RBRACKET

notSlash <- ! '/' .

% boring details

ag-comment <- '%' (!newline .)* newline
COMMA <- ',' ws*
COLON <- ':' ws*
LBRACE <- '{' ws*
RBRACE <- '}' ws*
LBRACKET <- '[' ws*
RBRACKET <- ']' ws*





% boiler place stuff

ws <- (space / newline / carriage-return / tab)* { (:text t) }
space <- ' '
newline <- '\n'
tab <- '\t'
carriage-return <- '\r'

