* testing script(s)
#+name: runner
#+begin_src lisp :results output
  (ql:quickload :arrowgrams/runner)
#+end_src

#+name: runner
#+begin_src lisp :results output
  (arrowgrams/build::test-lar)
#+end_src

#+RESULTS: runner
#+begin_example
To load "arrowgrams/runner":
  Load 1 ASDF system:
    arrowgrams/runner
; Loading "arrowgrams/runner"
[package loops]...................................
[package alexandria.1.0.0]........................
[package esrap]...................................
[package cl-event-passing]........................
[package cl-event-passing-user]...................
[package cl-event-passing-part]...................
[package cl-event-passing-event]..................
[package cl-event-passing-source].................
[package cl-event-passing-receiver]...............
[package cl-event-passing-schematic]..............
[package cl-event-passing-dispatch]...............
[package cl-event-passing-user-util]..............
[package cl-event-passing-user-wire]..............
[package cl-event-passing-pin]....................
[package arrowgrams/build]........................
[package cl-ppcre]................................
..................................................
[package json]....................................
[package json-rpc]................................
[package sl]......................................
[package cl-holm-prolog]..........................
[package cl-peg]..................................
[package peg-grammar].............................
[package test-grammar]............................
[package arrowgrams/compiler]................
sl parsing
...
sl parsing
..
sl parsing
..
sl parsing
.
sl parsing
..
sl parsing
.............................................
[package arrowgrams/compiler].....................
[package arrowgrams/compiler].....................
[package arrowgrams/compiler].....................
..................................................
[package arrowgrams/build].............
in compiler-event-passing
...........
[package arrowgrams/build].......
#+end_example

