* build helloworld and run it
#+name: runner
#+begin_src lisp :results output
  (progn
    (uiop:run-program "~/quicklisp/local-projects/rm.bash")
    (ql:quickload :arrowgrams/build)
    (ql:quickload :arrowgrams/runner))
#+end_src

build schematic...
#+name: runner
#+begin_src lisp :results output
  (progn
    (arrowgrams/build::arrowgrams-to-json "ahelloworld")
    (cl-user::dispatcher-inject cl-user::*dispatcher* "start" t)))
#+end_src

run graph...
#+name: runner
#+begin_src lisp
  (progn
    (arrowgrams/build::load-and-run-from-file  (arrowgrams/build::json-graph-path "ahelloworld"))
#+end_src

* lispworks
  if needed {
    load ../esa/lw0 
    (lw0)
    load ../esa/lw0 
    (transpile)
  }
  load ../cl-run/lw2
  (lw2) 
    (cl-user::dispatcher-inject *dispatcher* "start" t))

* results
#+RESULTS: runner
#+begin_example
To load "arrowgrams/build":
  Load 1 ASDF system:
    arrowgrams/build
; Loading "arrowgrams/build"
[package cl-ppcre]................................
..................................................
[package json]....................................
[package json-rpc]................................
[package loops]...................................
[package cl-holm-prolog]..........................
[package cl-event-passing]........................
[package cl-event-passing-user]...................
[package cl-event-passing-part]...................
[package cl-event-passing-event]..................
[package cl-event-passing-source].................
[package cl-event-passing-receiver]...............
[package cl-event-passing-schematic]..............
[package cl-event-passing-dispatch]...............
[package cl-event-passing-user-util]..............
[package cl-event-passing-user-wire]..............
[package cl-event-passing-pin]....................
[package alexandria.1.0.0]........................
[package arrowgrams/compiler].....................
..................................................
..................................................
[package scanner].................................
[package parsing-assembler].......................
[package stack-dsl]...............................
[package arrowgrams/esa-transpiler]...............
..................................................
[package arrowgrams/build]........................

To load "arrowgrams/runner":
  Load 1 ASDF system:
    arrowgrams/runner
; Loading "arrowgrams/runner"
[package arrowgrams/build]..........
#+end_example

