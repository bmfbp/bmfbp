An FD describes a position (ns various other items) in a file.

Each *nix command has an array of FD's.

By convention fd[0] is the standard input (stdin) for a command - the command reads from fd[0], and, by convention, fd[1] is the standard output for a coommand - it writes to fd[1], and, by convention, fd[2] is the error output for a command - it writes error messages to fd[2]

A pipe is a pair of file descriptors (FD).  A pipe has type int [][], and, by convention, the 0'th entry of the pair is the "input" of the pipe and the 1'th entry is the output of the pipe

For example "cmd1 | cmd2" is set up by creating a pipe - a pair of FD's.  Cmd1 writes to the FD in pipe[1] and cmd2 reads from the FD in pipe[0].

To create a pipe, first, we make a pipe and put two FDs into it, e.g. FD0 <= a unique file descriptor (to a file with no name), FD1 <= another unique (anonymous) file descriptor, and, then the pipe is pipe[FD0][FD1].  Next, we map stdout and stdin appropriately, FD0 is put into fd[1] of cmd1 and FD1 is put into fd[0] of cmd1.  To do this mapping, DUP2() is used, e.g. dup2(pipe[FD1],fd[1]) is done in cmd1 and dup2(pipd[FD0],fd[0]) is done in cmd2.

In reality, the shell creates an array of pipes, one row (of pairs) for every "|" in a shell pipeline.  The shell forks commands, making a clone of itsef and all of its data structures, esp. the array of pipes.  The child, when forekd, uses dup2() to copy any FD's then closes all other FD's (that it doesn't need), then "escapes" from the parent (e.g. the shell) by using the exec() command.  The child continues running, using the cloned FD's (e.g for stdin, stdout and stderr).


Dup2(), unlike dup(), overwrites the FD given in argument #2.  If argument #2 contains an open FD, it is first closed, then overwriten.  In the example above, cmd1 wants to overwrite its stdout (fd[1]), dup2() checks if fd[1] contains a valid FD, closes it first, the overwrites fd[1] with the given FD (in argument #1 of dup2()).  Likewise, in cmd2, fd[0] is closed (if not empty) then overwritten with the argument #1 given to dup2().


