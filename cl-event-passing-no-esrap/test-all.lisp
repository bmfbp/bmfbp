(in-package :cl-user)

(defun test-all ()
  (format *standard-output* "~&test0~%")
  (cl-event-passing-user::test0)
  (format *standard-output* "~&test1~%")
  (cl-event-passing-user::test1)
  (format *standard-output* "~&test6~%")
  (cl-event-passing-user::test6)
  (format *standard-output* "~&test6a~%")
  (cl-event-passing-user::test6a)
  (format *standard-output* "~&test7~%")
  (cl-event-passing-user::test7)
  (format *standard-output* "~&test8~%")
  (cl-event-passing-user::test8)
  (format *standard-output* "~&test9~%")
  (cl-event-passing-user::test9)
  (format *standard-output* "~&test 16~%")
  (cl-event-passing-user::test16)
  (format *standard-output* "~&feedback test~%")
  (cl-event-passing-user::test-feedback)
  (format *standard-output* "~&reuse test 1~%")
  (cl-event-passing-user::test-reuse1)
  (format *standard-output* "~&reuse test 3~%")
  (cl-event-passing-user::test-reuse3)
  (format *standard-output* "~&reuse test~%")
  (cl-event-passing-user::test-reuse)
  (format *standard-output* "~&reuse test 4~%")
  (cl-event-passing-user::test-reuse4)
  (format *standard-output* "~&test 26~%")
  (cl-event-passing-user::test26))
