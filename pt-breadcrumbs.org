* status
** got reuse working in cl-event-passing
** (some days ago) built PEG parser part in bmfbp/clparts
** try to reuse PEG parser part to build JSON parser
** working on bmfbp/build-process/cl-build/convert.lisp
** check that bmfbp/clparts/parser-builder works

* todo
** cut loops over to bmfbp
** cut cl-event-passing over to bmfbp
** should @defnetwork macro use the last declaration as the top level?

** fixed: why is (pbuilder :souce-out) not erroring out?  It's a typo.

* git branches
** master
** pt-20191129-json - build json parser using PEG parser builder part in bmfbp/clparts
   no Spacing in test.peg --> first test is to remove all whitespace, when that works, we'll add Spacing rules

* git kraken
** merge, drag one branch and drop it onto another
   https://support.gitkraken.com/working-with-repositories/branching-and-merging/

* json grammar
** https://www.json.org/json-en.html

* peg bugs
** #\} breaks peg

* thinking...
** git branch 16f82ddc0f240696403fe0a8ecde169b3d1a20df 
   run (ql:quickload :arrowgrams/build/cl-build/test)
   run (arrowgrams/build/cl-build::test-all))
   the output is a CST (a Concrete Syntax Tree derived from the AST Abstract Syntax Tree) of test.json
   for example, see test.json, e.g. "kindname "build process", "partName" "ID382"
   what is needed is a graph, like that given by test.json, but in CL
   I'm thinking about what needs to be done next
   
